any(match(1,2))
any(match(1,2, nomatch = F))
if(any(match(row, 1:nrow(x), nomatch = F)){stop("no match")}
if(any(match(row, 1:nrow(x), nomatch = F))){stop("no match")}
x <- df.1
row <- 5
col <- 1
if(any(match(row, 1:nrow(x), nomatch = F))){stop("no match")}
if(!any(match(row, 1:nrow(x), nomatch = F))){stop("no match")}
row %in% 1:nrow(x)
!(row %in% 1:nrow(x))
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
destfile <- "idaho.csv"
download.file(url = url, destfile = destfile, method = "curl")
id <- read.csv(destfile, header = T)
a <- str_split(names(id))
library(stingr)
a <- str_split(names(id))
?strsplit
a <- strsplit(names(id), split = "wgtp")
a[[123]]
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
destfile <- "gdp.csv"
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
destfile <- "gdp.csv"
download.file(url = url, destfile = destfile, method = "curl")
gdp <- read.csv("gdp.csv", header = T)
names(gdp)
View(gdp)
?read.csv
gdp <- read.csv("gdp.csv", header = T, skip = 2, nrows = 192)
View(gdp)
gdp <- read.csv("gdp.csv", header = T, skip = 2, nrows = 192, blank.lines.skip = T)
View(gdp)
gdp <- read.csv("gdp.csv", header = F, skip = 4, nrows = 190, blank.lines.skip = T)
View(gdp)
gdp <- read.csv("gdp.csv", header = F, skip = 5, nrows = 190, blank.lines.skip = T)
View(gdp)
a <- gdp[, 5]
a
a <- gsub(",", "", a)
a
library(gdata)
trim(a)
a <- trim(a)
sum(a)
a <- as.numeric(a)
sum(a)
mean(a)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
destfile <- "edu"
download.file(url = url, destfile = destfile, method = "curl")
destfile <- "edu.csv"
download.file(url = url, destfile = destfile, method = "curl")
ed <- read.csv("edu.csv")
View(ed)
rm(id)
names(ed)
ed <- read.csv("edu.csv", strip.white = T)
View(ed)
names(gdp)
View(gdp)
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
head(sampleTimes)
length(sampleTimes)
View(amzn)
nrows(amzn)
dim(amxn)
dim(amzn)
length(grep("^2012", row.names(amxn)))
length(grep("^2012", row.names(amzn)))
length(grep("^2012", sampleTimes)
)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
destfile <- "edu.csv"
download.file(url = url, destfile = destfile, method = "curl")
ed <- read.csv("edu.csv", strip.white = T)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
destfile <- "gdp.csv"
download.file(url = url, destfile = destfile, method = "curl")
gdp <- read.csv("gdp.csv", header = F, skip = 5, nrows = 190, blank.lines.skip = T)
names(gdp)
names(ed)
names(gdp)[1] <- names(ed)[1]
names(gdp)
merge(ed, gdp)
a <- merge(ed, gdp)
View(a)
apply(a, 1, grep("June", a))
apply(a, 1, FUN = grep, "June"))
apply(a, 1, FUN = grep, "June")
grep("fiscal", names(a))
grep("year", names(a))
a <- a[, c(1, grep("year", names(a)))]
a
?scan
hotel.dat <- "<Avg. Price>$103, <URL>http://www.tripadvisor.com/ShowUserReviews-g60878-d100506-r21086254-,
<Author>expressoparking"
?read.delim
y <- read.delim("hotel.dat")
?scan
?write.csv
write.table(hotel.dat, file = "hotel.dat")
y <- read.delim("hotel.dat")
y
hotel.dat <- "<Avg. Price>$103, <URL>http://www.tripadvisor.com/ShowUserReviews-g60878-d100506-r21086254-,
<Author>expressoparking"
hotel.dat <- as.data.frame(hotel.dat)
View(hotel.dat)
y <- "<Author>expressoparking"
author <- grep("<Author>*", y)
data_author <- y[author,]
getwd()
a <- c(NA, 2)
b <- c(1, 2)
a == NA
str(a)
class(a)
a == 2
a == NA
a == "NA"
?is.na
is.na(a)
is.na(a) == T
which(is.na(a) == T)
a <- c(NA, 2, NA)
which(is.na(a) == T)
a[which(is.na(a) == T)]
a[which(is.na(a) == T)] <- b[1]
a <- c(NA, 2, NA)
b <- c(1, 2, 3)
a <- a[which(is.na(a) == T)] <- b[1]
a <- c(NA, 2, NA)
b <- c(1, 2, 3)
a[which(is.na(a) == T)] <- b[1]
df <- data.frame(a, b)
View(df)
str(df)
a <- c(NA, 2, NA)
b <- c(1, 2, 3)
df <- data.frame(a, b)
str(df)
df
which(is.na(df$a) == T)
df[which(is.na(df$a) == T), ]
df[which(is.na(df$a) == T), df$a]
df[which(is.na(df$a) == T), c("a")]
df
df[which(is.na(df$a) == T), c("a")] <- df[which(is.na(df$a) == T), c("b")
)
df[which(is.na(df$a) == T), c("a")] <- df[which(is.na(df$a) == T), c("b")]
df
a <- c(NA, 2, NA)
b <- c(1, 2, 3)
a[which(is.na(a) == T)] <- b[which(is.na(a) == T]
a <- c(NA, 2, NA)
b <- c(1, 2, 3)
a[which(is.na(a) == T)] <- b[which(is.na(a) == T]
a[which(is.na(a) == T)] <- b[which(is.na(a) == T)]
?data
character(a)
?datasets()
?library
library(help = "datasets")
data(AirPassengers)
head(AirPassengers)
names(AirPassengers)
data(AirPassengers)
head(AirPassengers)
?AirPassengers
ap <- data(AirPassengers)
dim(ap)
class(ap)
ap <- AirPassengers
class(ap)
dim(ap)
class(ap)
ap <- AirPassengers
dim(ap)
class(ap)
ap
source('~/.active-rstudio-document', echo=TRUE)
rep("000", 5)
paste(1, rep("000", 5))
paste(1, 000)
paste(1, "000")
paste(1, "000"m sep = ",")
paste(1, "000", sep = ",")
rep("0", 12)
rep("000", 12)
paste(rep("000", 12), sep = ",")
paste(rep("000", 12), sep = ",")
?paste
paste(rep("000", 12), sep = "")
paste("000", sep = "")
paste("000", sep = ",")
paste("000",  ",")
paste("000", ",")
paste("000", ",", sep = "")
rep(paste("000", ",", sep = ""), 12)
paste0(rep(paste("000", ",", sep = ""), 12), collapse = "")
paste0(rep(paste("000", ",", sep = ""), 12), "000", collapse = "")
paste0(rep(paste("000", ",", sep = ""), 12),  collapse = "")
paste(1, paste0(rep(paste("000", ",", sep = ""), 12),  collapse = ""), "000", sep  = "")
paste(1, paste0(rep(paste("000", ",", sep = ""), 12),  collapse = ""), "000", sep  = ",")
1e106
1e10
1e6
1e1
1e2
1e3
1e4
R.Version()
reside.pkg <- rownames(installed.packages())
needed.pkg <- c("knitr", "formatR", "xtable", "highr")
get.pkg <- setdiff(needed.pkg, reside.pkg)
get.pkg
is.empty(get.pkg)
getpkg == 0
get.pkg == 0
length(get.pkg)
??empty
not_empty(get.pkg)
a <- 1:3
b <- 2
a %in% b
a <- c(letters[1:3])
installed.pkg <- c(letters[1:3])
needed.pkg <- "b"
installed.pkg <- c(letters[1:3])
needed.pkg <- "b"
get.pkg <- setdiff(installed.pkg, needed.pkg)
library(assertthat)
is_empty(get.pkg)
is.empty(get.pkg)
not_empty(get.pkg)
not_empty()
not_empty
reside.pkg <- rownames(installed.packages())
needed.pkg <- c("knitr", "formatR", "xtable", "highr")
get.pkg <- setdiff(needed.pkg, reside.pkg)
all((dim(get.pkg) %||% length(get.pkg)) != 0)
?assertthat
?asserthat()
dim(get.pkg)
dim(get.pkg) && length(get.pkg) !=0
length(get.pkg)
search()
not_empty(get.pkg)
reside.pkg <- rownames(installed.packages())
needed.pkg <- c("knitr", "formatR", "xtable", "highr")
get.pkg <- setdiff(needed.pkg, reside.pkg)
library(assertthat)
if(not_empty(get.pkg){
if(not_empty(get.pkg)){
install.packages(pkgs = get.pkg, repos = getOption("repos")
)
}
reside.pkg <- rownames(installed.packages())
needed.pkg <- c("knitr", "formatR", "xtable", "highr")
get.pkg <- setdiff(needed.pkg, reside.pkg)
library(assertthat)
if(not_empty(get.pkg)){
install.packages(pkgs = get.pkg, repos = getOption("repos")
)
}
source('~/.active-rstudio-document', echo=TRUE)
resident.pkg <- rownames(installed.packages())
required.pkg <- c("knitr", "formatR", "xtable", "highr")
retrieve.pkg <- setdiff(needed.pkg, reside.pkg)
library(assertthat)
if(not_empty(retrieve.pkg)){
install.packages(pkgs = get.pkg,
repos = getOption("repos"
)
)
}
resident.pkg <- rownames(installed.packages())
required.pkg <- c("knitr", "formatR", "xtable", "highr")
retrieve.pkg <- setdiff(needed.pkg, reside.pkg)
library(assertthat)
if(not_empty(retrieve.pkg)){
install.packages(pkgs = get.pkg,
repos = getOption("repos"
)
)
}
resident.pkg <- rownames(installed.packages())
required.pkg <- c("knitr", "formatR", "xtable", "highr")
retrieve.pkg <- setdiff(required.pkg, resident.pkg)
library(assertthat)
if(not_empty(retrieve.pkg)){
install.packages(pkgs = get.pkg,
repos = getOption("repos"
)
)
}
source('~/.active-rstudio-document', echo=TRUE)
updated.packages()
update.packages()
?install.packages()
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
?opts_knit
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
?rnorm
Rversion()
versionR()
?versionR
??versionR
sessionInfo()
act <- rnorm(n = 10000, mean = 21, sd = 5.4)
plot(act)
hist(act, main = "ACT Distribution")
density(act)
plot(density(act))
hist(act, main = "ACT Distribution")
hist(act, main = "ACT Distribution", breaks = 36)
min(act)
max(act)
?rnorm
hist(act, main = "ACT Distribution", breaks = 41)
setwd("~/Dropbox/R-Projects/hosp_util")
ltrs <- letters[1:5]
ltrs <- letters[1:5]
for(i in 1:length(ltrs)){
assign(ltrs[i], 5)
}
ls()
sum(ls())
?ls
ls(pattern="ae")
ls(pattern="a|e")
ls(pattern="a|b|c|d|e")
sum(ls(pattern="a|b|c|d|e"))
sum(get(ls(pattern="a|b|c|d|e")))
?ob
?objects
objects()
ls()
sum(a:e)
sum(a,b,c,d,e)
sum_ltrs <- sum(a,b,c,d,e)
write(sum_ltrs, source_exp)
write(sum_ltrs, "./source_exp")
source("./source_exp.R")
?source
source("./source_exp.R")
source("./source_exp.R", echo = T)
source("./source_exp.R", echo = F)
source("./source_exp.R", echo = verbose)
source("./source_exp.R",
echo = F,
local = F)
source("./source_exp.R",
echo = F,
local = F)
source("./source_exp.R",
echo = T,
local = T,
verbose = T)
rm(ls())
rm(list = ls())
source('~/Dropbox/R-Projects/hosp_util/source_exp.R', echo=TRUE)
source('~/Dropbox/R-Projects/hosp_util/source_exp.R', echo=TRUE)
source('~/Dropbox/R-Projects/hosp_util/R/create_table_data.R', echo=TRUE)
rm(list = ls())
source("./R/create_table_data.R")
source("./R/functions.R")
source('~/Dropbox/R-Projects/hosp_util/R/main.R', echo=TRUE)
source('~/Dropbox/R-Projects/hosp_util/R/main.R', echo=TRUE)
a <- get_table("admissions")
source('~/Dropbox/R-Projects/hosp_util/R/main.R', echo=TRUE)
source("./R/create_table_data.R")
source("./R/functions.R")
source("./R/create_summary_data.R")
source('~/Dropbox/R-Projects/hosp_util/R/main.R', echo=TRUE)
source('~/Dropbox/R-Projects/hosp_util/R/main.R', echo=TRUE)
unique(a$variable)
get_table("admissions")
unique(a$variable)
a <- get_table("tot_licensed_beds")
library(ggplot2)
library(scales)
p <- ggplot(a, aes(x = year, y = sum))
p <- p + geom_line()
a <- get_table("tot_licensed_beds")
library(ggplot2)
library(scales)
p <- ggplot(a, aes(x = year, y = sum))
p <- p + geom_line()
p <- p + ggtitle(paste("Kentucky Hospitals Tot. Licensed Beds"))
p <- p + scale_x_continuous(breaks = c(2000, 2005, 2010, 2015),
minor_breaks = 2000:2015,
limits = c(2000, 2015)
)
p
source("./R/functions.R")
#plot total number of licensed beds in Kentucky
plot_ky_tot_licensed_beds()
a <- get_table("tot_licensed_beds")
a <- get_table("tot_licensed_beds")
library(ggplot2)
library(scales)
p <- ggplot(a, aes(x = year, y = sum))
p <- p + geom_line()
p <- p + ggtitle(paste("Kentucky Hospitals Tot. Licensed Beds"))
p <- p + scale_x_continuous(breaks = c(2000, 2005, 2010, 2015),
minor_breaks = 2000:2015,
limits = c(2000, 2015)
)
p
ggsave(p, "./charts/Ky_Hosp_Tot_Licensed_Beds.pdf",
width = 8, height = 5, units = c("in"))
dev.off()
plot_ky_tot_licensed_beds()
?ggsave
plot_ky_tot_licensed_beds()
source("./R/functions.R")
source("./R/functions.R")
source("./R/create_table_data.R")
source("./R/create_summary_data.R")
source("./R/functions.R")
source("./R/functions.R")
#plot total number of licensed beds in Kentucky
plot_ky_tot_licensed_beds()
plot_ky_tot_licensed_beds()
source("./R/functions.R")
#plot total number of licensed beds in Kentucky
plot_ky_tot_licensed_beds()
unique(a$variable)
plot_ky_bed_in_operation()
source("./R/functions.R")
#plot total number of licensed beds in Kentucky
plot_ky_tot_licensed_beds()
#plot total number of beds in operation in Kentucky
plot_ky_beds_in_operation()
unique(a$variable)
source("./R/functions.R")
source("./R/functions.R")
#plot total number of licensed beds in Kentucky
plot_ky_tot_licensed_beds()
#plot total number of beds in operation in Kentucky
plot_ky_beds_in_operation()
#plot total number of hospital admissions in Kentucky
plot_ky_hosp_admissions()
unique(a$variable)
source("./R/functions.R")
#plot total number of licensed beds in Kentucky
plot_ky_tot_licensed_beds()
#plot total number of beds in operation in Kentucky
plot_ky_beds_in_operation()
#plot total number of hospital admissions in Kentucky
plot_ky_hosp_admissions()
#plot total number of inpatient days in Kentucky
plot_ky_hosp_inpatient_days()
unique(a$variable)
source("./R/functions.R")
plot_ky_hosp_discharges()
source("./R/functions.R")
plot_ky_hosp_discharge_days()
source("./R/functions.R")
plot_ky_hosp_avg_daily_census()
source("./R/functions.R")
plot_ky_hosp_avg_length_of_stay()
source("./R/functions.R")
plot_ky_hosp_occupancy_pct()
unique(a$variable)
source("./R/functions.R")
plot_methodist_tot_licensed_beds()
plot_methodist_inpatient_days()
source("./R/functions.R")
plot_methodist_inpatient_days()
source("./R/functions.R")
plot_methodist_discharges()
source("./R/functions.R")
plot_methodist_discharge_days()
source("./R/functions.R")
plot_methodist_discharge_days()
source('~/Dropbox/R-Projects/hosp_util/R/main.R', echo=TRUE)
unique(a$variables)
a<- get_data()
unique(a$variable)
get_table("admissions")
568266-538010
30256/568266
a[a$hospital == "methodist hospital",]
a[a$hospital == "methodist hospital" & a$variable == "admissions",]
(7532-4343)/7532
